#Hibernate Parameter Don't Change

#数据库方言
#MySQLMyISAMDialect MyISAM引擎，不支持事务处理等高级处理（高性能，执行速度比InnoDB快）
#MySQLInnoDBDialect InnoDB引擎，支持事务
hibernate.dialect = org.hibernate.dialect.MySQLInnoDBDialect

#自动创建|更新|验证数据库表结构
#create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#create-drop ：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
#update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。
#validate ：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
hibernate.hbm2ddl = update
#顾名思义，是否显示hibernate执行的sql语句到控制台
hibernate.show_sql = true
#sql语句格式化
hibernate.format_sql = false
#Hibernate应用中操作的统计信息,用于二级缓存存放的数据条数，查询时错过的数据条数，缓存命中率等信息
hibernate.generate_statistics = false
#批量SQL执行条数，避免大数据情况下的内存溢出(Oracle ,sql server 支持，mysql不支持）
hibernate.c3p0.batch_size = 25
#设定JDBC的Statement读取数据的时候每次从数据库中取出的记录条数(Oracle ,sql server 支持，mysql不支持）
hibernate.c3p0.fetch_size = 50

#C3P0 reconnect 
c3p0.acquireRetryAttempts=60
c3p0.acquireRetryDelay = 1000
c3p0.breakAfterAcquireFailure=false 

c3p0.initialPoolSize = 1
c3p0.maxIdleTime = 25000
c3p0.acquireIncrement = 1

c3p0.testConnectionOnCheckin = true
c3p0.automaticTestTable = c3p0TestTable
c3p0.idleConnectionTestPeriod = 18000
c3p0.checkoutTimeout=3000
